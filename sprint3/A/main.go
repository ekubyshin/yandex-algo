package main

import "fmt"

/*
A. Генератор скобок

Рита по поручению Тимофея наводит порядок в правильных скобочных
последовательностях (ПСП), состоящих только из круглых скобок ().
Для этого ей надо сгенерировать все ПСП длины 2n в алфавитном порядке
—– алфавит состоит из ( и ) и открывающая скобка идёт раньше закрывающей.

Помогите Рите —– напишите программу, которая по заданному n выведет все
ПСП в нужном порядке.

Рассмотрим второй пример. Надо вывести ПСП из четырёх символов.
Таких всего две:

1. (())
2. ()()

(()) идёт раньше ()(), так как первый символ у них одинаковый, а на
второй позиции у первой ПСП стоит (, который идёт раньше ).

Формат ввода
На вход функция принимает n — целое число от 0 до 10.

Формат вывода
Функция должна напечатать все возможные скобочные последовательности
заданной длины в алфавитном (лексикографическом) порядке.

Пример 1

Ввод
3

Вывод
((()))
(()())
(())()
()(())
()()()
*/

func main() {
	var n int
	fmt.Scanf("%d", &n)
	generate(n)
}

func generate(n int) {
	if n == 0 {
		return
	}
	generateBrackets("", n, 0, 0)
}

func generateBrackets(s string, n int, o int, c int) {
	if len(s) == n*2 {
		fmt.Println(s)
		return
	}
	if o < n {
		generateBrackets(s+"(", n, o+1, c)
	}
	if c < o {
		generateBrackets(s+")", n, o, c+1)
	}
}
